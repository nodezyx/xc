const { cmd } = require('../command');
const axios = require('axios');
const config = require('../config');

// Helper function to handle image generation
async function handleImageGen(conn, from, mek, m, q, apiUrl, generatorName, isJsonResponse = false, imageUrlKey = 'url') {
    try {
        if (!q) return await conn.sendMessage(from, { text: `❌ Please provide a prompt for ${generatorName}.\nUsage: .${m.command} [prompt]` }, { quoted: mek });

        // React: Processing
        await conn.sendMessage(from, { react: { text: '⏳', key: m.key } });
        await conn.sendPresenceUpdate("composing", from);

        // Fetch image URL
        const { data } = await axios.get(apiUrl + encodeURIComponent(q));

        let imageUrl;
        if (isJsonResponse) {
            if (!data || (!data[imageUrlKey] && !data.imageUrls)) {
                throw new Error("Invalid API response format");
            }
            imageUrl = data[imageUrlKey] || data.imageUrls[0];
        } else {
            // For direct image responses, use the request URL as image URL
            imageUrl = apiUrl + encodeURIComponent(q);
        }

        if (!imageUrl) {
            throw new Error("No image URL found in response");
        }

        // React: Success
        await conn.sendMessage(from, { react: { text: '✅', key: m.key } });

        // Send generated image
        await conn.sendMessage(from, { 
            image: { url: imageUrl },
            caption: `🖼️ *${generatorName}*\n\n` +
                     `📝 *Prompt:* ${q}\n\n` +
                     `> © Generated by Subzero MD`,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363304325601080@newsletter',
                    newsletterName: '『 𝐒𝐔𝐁𝐙𝐄𝐑𝐎 𝐌𝐃 』',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error(`${generatorName} Error:`, e);
        await conn.sendMessage(from, { react: { text: '❌', key: m.key } });
        await conn.sendMessage(from, { text: `❌ Failed to generate image with ${generatorName}.\nError: ${e.message}` }, { quoted: mek });
    }
}

// ======================
// Working Image Generation Commands
// ======================

// GiftedTech APIs
cmd({
    pattern: "fluximg",
    alias: ["flux"],
    react: "🌌",
    desc: "Generate Flux-style image | Usage: .fluximg [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://api.giftedtech.web.id/api/ai/fluximg?apikey=gifted&prompt=',
        'Flux Image Generator',
        true,
        'result'
    );
});

cmd({
    pattern: "deepimg",
    alias: ["deepart"],
    react: "🧠",
    desc: "Deep AI image generation | Usage: .deepimg [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://api.giftedtech.web.id/api/ai/deepimg?apikey=gifted&prompt=',
        'Deep Image Generator',
        true,
        'result'
    );
});

// Kaiz-APIs Image Generators
cmd({
    pattern: "realistic",
    react: "📸",
    desc: "Generate realistic images | Usage: .realistic [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=realistic&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Realistic Image Generator',
        true
    );
});

cmd({
    pattern: "animegen",
    react: "🌸",
    desc: "Generate anime-style images | Usage: .animegen [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=anime&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Anime Image Generator',
        true
    );
});

cmd({
    pattern: "digitalart",
    react: "🎨",
    desc: "Generate digital art | Usage: .digitalart [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=digital-art&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Digital Art Generator',
        true
    );
});

cmd({
    pattern: "oilpaint",
    react: "🖌️",
    desc: "Generate oil painting style images | Usage: .oilpaint [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=oil-painting&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Oil Painting Generator',
        true
    );
});

cmd({
    pattern: "watercolor",
    react: "🌊",
    desc: "Generate watercolor style images | Usage: .watercolor [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=watercolor&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Watercolor Generator',
        true
    );
});

cmd({
    pattern: "pixelart",
    react: "🧊",
    desc: "Generate pixel art | Usage: .pixelart [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=pixel-art&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Pixel Art Generator',
        true
    );
});

cmd({
    pattern: "3drender",
    react: "🖥️",
    desc: "Generate 3D rendered images | Usage: .3drender [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=3d-render&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        '3D Render Generator',
        true
    );
});

cmd({
    pattern: "sketch",
    react: "✏️",
    desc: "Generate pencil sketch images | Usage: .sketch [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/chatbotru-gen?prompt=&model=pencil-sketch&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Pencil Sketch Generator',
        true
    );
});

cmd({
    pattern: "flux2",
    react: "🌀",
    desc: "Alternative Flux image generation | Usage: .flux2 [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/flux-realtime?prompt=&stream=false&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Flux Realtime Generator',
        false
    );
});

cmd({
    pattern: "flux3",
    react: "🌠",
    desc: "Another Flux variant image generation | Usage: .flux3 [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/flux-replicate?prompt=&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Flux Replicate Generator',
        false
    );
});

cmd({
    pattern: "poli",
    react: "🦄",
    desc: "Poli image generation | Usage: .poli [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/poli?prompt=&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Poli Image Generator',
        false
    );
});

cmd({
    pattern: "fotor",
    react: "🖼️",
    desc: "Fotor image generation | Usage: .fotor [prompt]",
    category: "tool",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    await handleImageGen(
        conn, from, mek, m, q,
        'https://kaiz-apis.gleeze.com/api/fotor?prompt=&limit=1&apikey=cf2ca612-296f-45ba-abbc-473f18f991eb',
        'Fotor Image Generator',
        true,
        'imageUrls'
    );
});
